interactions:
- request:
    body: null
    headers:
      Accept: [application/json]
    method: GET
    uri: https://jsonplaceholder.typicode.com/
  response:
    body: {string: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta
        name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n<link
        rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/modern-normalize/0.5.0/modern-normalize.min.css\"
        />\n<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/mono-blue.min.css\">\n<script
        src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js\"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n<title>JSONPlaceholder
        - Fake online REST API for developers</title>\n<style>\n    body {\n      font-family:
        system-ui, BlinkMacSystemFont, -apple-system, Segoe UI, Roboto, Oxygen, Ubuntu,
        Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n      color:
        #22292F;\n      line-height: 1.5;\n    }\n\n    a {\n      color: #5661B3;\n
        \     text-decoration: none;\n      border-bottom: 1px solid transparent;\n
        \   }\n\n    a:hover {\n      text-decoration: underline;\n    }\n\n    h1
        {\n      font-size: 4rem;\n      font-weight: 300;\n      letter-spacing:
        0.05em;\n    }\n\n    @media (max-width: 768px) {\n      h1 {\n        font-size:
        2rem;\n      }\n    }\n\n    h2 {\n      margin-top: 4rem;\n      margin-bottom:
        1rem;\n      font-weight: normal;\n    }\n\n    b {\n      background-color:
        #f8fafc;\n      font-weight: normal;\n    }\n\n    .hljs {\n      padding:
        1rem;\n    }\n\n    td:first-child {\n      width: 8rem;\n    }\n\n    .line
        {\n      padding: .25rem;\n      background-image: linear-gradient(-20deg,
        #2b5876 0%, #4e4376 100%);\n    }\n\n    .container {\n      max-width: 60rem;\n
        \     margin: auto;\n      padding: 1rem;\n    }\n\n    .hero {\n      padding:
        4rem;\n      text-align: center;\n    }\n\n    .sponsors {\n      margin-bottom:
        2rem;\n      padding: 1rem;\n      background-color: #f8fafc;\n      text-align:
        center;\n    }\n\n    .sponsors p:last-of-type {\n      margin-top: 2rem;\n
        \   }\n\n    main {\n      margin-bottom: 4rem;\n    }\n\n    #run-button
        {\n      padding: .5rem 1rem;\n      margin-right: 1rem;\n      border-width:
        .125rem;\n      border-radius: .25rem;\n      border-style: solid;\n      border-color:
        currentColor;\n      background-color: white;\n      color: #5661B3;\n      cursor:
        pointer;\n      transition: all .25s;\n    }\n\n    #run-button:hover {\n
        \     background-color: #5661B3;\n      color: white;\n    }\n\n    #run-message
        {\n      display: none;\n    }\n\n    #result {\n      display: none;\n    }\n\n
        \   footer {\n      padding: 1rem;\n      background-color: #f8fafc;\n      text-align:
        center;\n    }\n  </style>\n</head>\n<body>\n\n<div class=\"line\"></div>\n\n<div
        class=\"hero\">\n<h1>\n<span>{</span>\n<span>JSON</span>\n<span>:</span>\n<span>Placeholder</span>\n<span>}</span>\n</h1>\n<p>\nFake
        Online REST API for Testing and Prototyping\n<br> Serving ~200 millions API
        requests per month\n</p>\n<p>\nPowered by\n<a href=\"https://github.com/typicode/json-server\">JSON
        Server</a>\nand\n<a href=\"https://github.com/typicode/lowdb\">LowDB</a>\n</p>\n</div>\n\n<div
        class=\"sponsors\">\n<h3>Sponsors \U0001F64F</h3>\n<p>\n<a href=\"https://www.youtube.com/channel/UC29ju8bIPH5as8OGnQzwJyA\"
        target=\"_blank\">\n<img src=\"https://i.imgur.com/2LDiENb.png\" height=\"60px\">\n</a>\n</p>\n<p>\n<a
        href=\"https://patreon.com/typicode\">[Become a sponsor]</a>\n</p>\n</div>\n\n<div
        class=\"container\">\n<main>\n\n<h2>Intro</h2>\n<p>\nJSONPlaceholder is a
        free online REST service that you can use whenever you need some fake data.\n<br>It's
        great for tutorials, testing new libraries, sharing code examples, ...\n</p>\n\n<h2>Example</h2>\n<p>\nRun
        this code in a console or from anywhere. Both\n</p>\n<pre><code id=\"example\"
        class=\"javascript\">fetch('https://jsonplaceholder.typicode.com/todos/1')\n
        \ .then(response => response.json())\n  .then(json => console.log(json))\n</code></pre>\n<p>\n<button
        id=\"run-button\">Make an API call</button>\n<span id=\"run-message\">Awesome
        \U0001F942</span>\n</p>\n<pre><code id=\"result\" class=\"json\"></code></pre>\n<p>\n<strong>Tip</strong>
        you can use\n<b>\nhttp\n</b> or\n<b>\nhttps\n</b> when making requests to
        JSONPlaceholder.\n</p>\n\n<h2>Resources</h2>\n<p>\nJSONPlaceholder comes with
        a set of common resources.\n</p>\n<table class=\"resources\">\n<tr>\n<td>\n<a
        href=\"/posts\">/posts</a>\n</td>\n<td>100 posts</td>\n</tr>\n<tr>\n<td>\n<a
        href=\"/comments\">/comments</a>\n</td>\n<td>500 comments</td>\n</tr>\n<tr>\n<td>\n<a
        href=\"/albums\">/albums</a>\n</td>\n<td>100 albums</td>\n</tr>\n<tr>\n<td>\n<a
        href=\"/photos\">/photos</a>\n</td>\n<td>5000 photos</td>\n</tr>\n<tr>\n<td>\n<a
        href=\"/todos\">/todos</a>\n</td>\n<td>200 todos</td>\n</tr>\n<tr>\n<td>\n<a
        href=\"/users\">/users</a>\n</td>\n<td>10 users</td>\n</tr>\n</table>\n<p>\n<strong>Note</strong>
        resources have relations. For example:\n<b>posts</b> have many\n<b>comments</b>,\n<b>albums</b>
        have many\n<b>photos</b>, ...\n</p>\n\n<h2>Routes</h2>\n<p>\nAll HTTP methods
        are supported.\n</p>\n<table>\n<tr>\n<td>GET</td>\n<td>\n<a href=\"/posts\">/posts</a>\n</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>\n<a
        href=\"/posts/1\">/posts/1</a>\n</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>\n<a
        href=\"/posts/1/comments\">/posts/1/comments</a>\n</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>\n<a
        href=\"/comments?postId=1\">/comments?postId=1</a>\n</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>\n<a
        href=\"/posts?userId=1\">/posts?userId=1</a>\n</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>/posts</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td>PATCH</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>/posts/1</td>\n</tr>\n</tr>\n</table>\n<p>\n<strong>Note</strong>
        you can view detailed examples\n<strong>\n<a href=\"https://github.com/typicode/jsonplaceholder#how-to\">here</a>\n</strong>\n</p>\n\n<h2>Use
        your own data</h2>\n<p>\n<strong>\n<a href=\"https://github.com/typicode/json-server\">JSON
        Server</a>\n</strong> powers this website. You can use it to create the same
        fake API in less than\n<strong>30 seconds</strong> with your own data.\n</p>\n<pre><code
        class=\"bash\">npm install json-server</code></pre>\n<p>You can also try\n<a
        href=\"https://my-json-server.typicode.com\">My JSON Server</a> free service.</p>\n</main>\n</div>\n\n<footer>\n<p>\nCoded
        and built with \u2764\uFE0F by\n<a href=\"https://github.com/typicode\">typicode</a>\n</p>\n<p>Source
        code available on\n<a href=\"https://github.com/typicode/jsonplaceholder\">GitHub</a>\n</p>\n<p>\n\n\n</p>\n</footer>\n\n<script>\n
        \   (function (i, s, o, g, r, a, m) {\n      i['GoogleAnalyticsObject'] =
        r; i[r] = i[r] || function () {\n        (i[r].q = i[r].q || []).push(arguments)\n
        \     }, i[r].l = 1 * new Date(); a = s.createElement(o), m = s.getElementsByTagName(o)[0];
        a.async = 1; a.src = g; m.parentNode.insertBefore(a,\n        m)\n    })(window,
        document, 'script', '//www.google-analytics.com/analytics.js', 'ga'); ga('create',
        'UA-44497010-1', 'typicode.com');\n    ga('send', 'pageview'); var trackOutboundLink
        = function (url) {\n      ga('send', 'event', 'outbound', 'click', url, {\n
        \       'transport':\n          'beacon'\n      });\n    }\n  </script>\n<script
        src=\"//cdnjs.cloudflare.com/ajax/libs/fetch/2.0.3/fetch.min.js\"></script>\n<script>\n
        \   // Use http or https based on location.protocol\n    var example = document.getElementById('example')\n
        \   example.textContent = example.textContent.replace('http:', location.protocol)\n\n
        \   // Highlight result element\n    var result = document.getElementById('result')\n
        \   hljs.highlightBlock(result)\n\n    // Run example\n    var runButton =
        document.getElementById('run-button')\n    runButton.onclick = function ()
        {\n      var root = location.protocol + '//jsonplaceholder.typicode.com'\n
        \     var runMessage = document.getElementById('run-message')\n\n      //
        Hide or disable things during API call\n      runButton.disabled = true\n
        \     runMessage.style.display = 'none'\n      result.style.display = 'none'\n\n
        \     fetch('https://jsonplaceholder.typicode.com/todos/1')\n        .then(response
        => response.json())\n        .then(json => {\n          var str = JSON.stringify(json,
        null, '\\t')\n\n          // Format result\n          result.innerHTML =\n
        \           str.replace(/\\n/g, '<br/>')\n              .replace(/\\\\n/g,
        ' ')\n              .replace(/\\t/g, '&nbsp;&nbsp;')\n\n          hljs.highlightBlock(result);\n\n
        \         // Show and enable things after API call\n          runButton.disabled
        = false\n          runMessage.style.display = 'inline'\n          result.style.display
        = 'block'\n        })\n    }\n  </script>\n</body>\n</html>"}
    headers:
      Access-Control-Allow-Credentials: ['true']
      CF-Cache-Status: [HIT]
      CF-RAY: [44b6eed6eeb06c7c-SJC]
      Cache-Control: ['public, max-age=14400']
      Connection: [keep-alive]
      Content-Type: [text/html; charset=UTF-8]
      Date: ['Thu, 16 Aug 2018 21:18:21 GMT']
      Expect-CT: ['max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"']
      Expires: ['Fri, 17 Aug 2018 01:18:21 GMT']
      Last-Modified: ['Sun, 29 Jul 2018 21:56:24 GMT']
      Server: [cloudflare]
      Set-Cookie: ['__cfduid=d2298f2ad2272eaf0907e88029489f22c1534454301; expires=Fri,
          16-Aug-19 21:18:21 GMT; path=/; domain=.typicode.com; HttpOnly']
      Vary: ['Origin, Accept-Encoding']
      Via: [1.1 vegur]
      X-Powered-By: [Express]
    status: {code: 200, message: OK}
version: 1
